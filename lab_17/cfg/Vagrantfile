# -*- mode: ruby -*-
# vi: set ft=ruby :

MACHINES = {
    :bckpsrv => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.150',
        :ans_grp => "borgsrv",
        :disks => {
            :sata2 => {
                :dfile => '../sata2.vdi',
                :size => 2048,
                :port => 2
            }
        }
    },
    :bckpcln => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.160',
        :ans_grp => "borggrp"
    }
}

Vagrant.configure("2") do |cfg|

    MACHINES.each do |boxn, boxcfg|

        cfg.vm.define boxn do |box|

            box.vm.box = boxcfg[:box_name]
            box.vm.host_name = boxn.to_s
            box.vm.network "private_network", ip: boxcfg[:ip_addr]
                
            box.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--memory", "1024"]
                needsController = false
                if boxcfg[:ans_grp] == "borgsrv"
                    boxcfg[:disks].each do |dname, dconf|
                        unless File.exist?(dconf[:dfile])
                            vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                            needsController =  true
                        end
                    end
                end

                if needsController == true 
                    vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                    boxcfg[:disks].each do |dname, dconf|
                        vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                    end
                end
            end

            box.vm.provision "shell", inline: <<-SHELL
                mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
            SHELL

            box.vm.provision "ansible" do |ansible|
                ansible.playbook = "main.yml"
                ansible.become = "true"
                ansible.groups = {
                    boxcfg[:ans_grp] => boxn.to_s
                }
            end
        end
    end
end
